- name: Run SELinux in permissive mode
  become: True
  selinux:
    policy: targeted
    state: permissive
  when: selinux_enabled

- name: Add .bashrc for user
  become: True
  template:
    src: bashrc
    dest: /home/vagrant/.bashrc
    owner: vagrant
    group: vagrant
    mode: 0644
    force: yes

- name: Add .vimrc for user
  become: True
  template:
    src: vimrc
    dest: /home/vagrant/.vimrc
    owner: vagrant
    group: vagrant
    mode: 0644
    force: yes

- name: Add .bashrc for root
  become: True
  template:
    src: bashrc
    dest: /root/.bashrc
    owner: root
    group: root
    mode: 0644
    force: yes

- name: Add .vimrc for root
  become: True
  template:
    src: vimrc
    dest: /root/.vimrc
    owner: root
    group: root
    mode: 0644
    force: yes

- name: Keep SSSD_TEST_SUITE_BASHRC variable when sudo
  become: True
  lineinfile:
    path: /etc/sudoers
    insertafter: '^Defaults[ \t]+env_keep[ \t]+(.*)$'
    line: 'Defaults    env_keep += "SSSD_TEST_SUITE_BASHRC"'

- name: Accept SSSD_TEST_SUITE_BASHRC variable through ssh
  become: True
  lineinfile:
    path: /etc/ssh/sshd_config
    insertafter: '^AcceptEnv (.*)$'
    line: 'AcceptEnv SSSD_TEST_SUITE_BASHRC'
  register: result

- name: Reload sshd
  become: True
  service:
    name: sshd.service
    enabled: yes
    state: reloaded
  when: result.changed

- name: Add ssh key for vagrant user
  shell: |
    if [ -f /home/vagrant/.ssh/id_rsa ]; then
      echo "Key already exist. Nothing to do."
      exit 255
    fi

    ssh-keygen -b 2048 -t rsa -q -N "" -f /home/vagrant/.ssh/id_rsa
  register: result
  failed_when: "result.rc != 255 and result.rc != 0"
  changed_when: "result.rc == 0"
